name: Deploy Spring Project

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main  # main 브랜치에 풀리퀘스트될 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17  # 프로젝트에 사용하는 JDK 버전
          java-package: jdk
          distribution: 'temurin'

      # 3. Gradle빌드
      - name: Build with Gradle
        run: ./gradlew build
        env:
          PROD_MYSQL_HOSTNAME: ${{ secrets.PROD_MYSQL_HOSTNAME }}
          PROD_MYSQL_DB_NAME: ${{ secrets.PROD_MYSQL_DB_NAME }}
          PROD_MYSQL_DB_USERNAME: ${{ secrets.PROD_MYSQL_DB_USERNAME }}
          PROD_MYSQL_DB_PASSWORD: ${{ secrets.PROD_MYSQL_DB_PASSWORD }}

          PROD_MONGO_DB_HOST: ${{ secrets.PROD_MONGO_DB_HOST }}
          PROD_MONGO_DB_PASSWORD: ${{ secrets.PROD_MONGO_DB_PASSWORD}}
          PROD_MONGO_DB_NAME: ${{ secrets.PROD_MONGO_DB_NAME }}

          PROD_REDIS_HOST: ${{ secrets.PROD_REDIS_HOST }}
          PROD_REDIS_PORT: ${{ secrets.PROD_REDIS_PORT }}
          PROD_REDIS_PASSWORD: ${{ secrets.PROD_REDIS_PASSWORD }}

          PROD_JWT_SECRET: ${{ secrets.PROD_JWT_SECRET }}

          GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

      # 4. 서버에 배포
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/user/cornchat  # 서버의 프로젝트 경로
            ./stop.sh || true         # 기존 프로세스 중지 (optional)
            cp build/libs/cornchat.jar ./cornchat.jar # 빌드된 JAR 파일을 현재 디렉토리로 복사
            nohup java -jar cornchat.jar &  # Spring Boot 애플리케이션 실행