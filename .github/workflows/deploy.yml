name: Deploy Spring Project

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main  # main 브랜치에 풀리퀘스트될 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 핑테스트
#      - name: Ping the server
#        run: ping -c 4 ${{ secrets.SERVER_HOST }}

      #port reachability 테스트
      - name: Check SSH port
        run: nc -zv ${{ secrets.SERVER_HOST }} ${{ secrets.SERVER_PORT }}

      #ssh 연결 테스트
      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} -p ${{ secrets.SERVER_PORT }} "echo 'SSH connection successful'"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}


      # 1. 소스코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17  # 프로젝트에 사용하는 JDK 버전
          java-package: jdk
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew  # gradlew에 실행 권한 추가

      # 3. Gradle빌드
      - name: Build with Gradle
        run: ./gradlew build
        env:
          PROD_MYSQL_HOSTNAME: ${{ secrets.PROD_MYSQL_HOSTNAME }}
          PROD_MYSQL_DB_NAME: ${{ secrets.PROD_MYSQL_DB_NAME }}
          PROD_MYSQL_DB_USERNAME: ${{ secrets.PROD_MYSQL_DB_USERNAME }}
          PROD_MYSQL_DB_PASSWORD: ${{ secrets.PROD_MYSQL_DB_PASSWORD }}

          PROD_MONGO_DB_HOST: ${{ secrets.PROD_MONGO_DB_HOST }}
          PROD_MONGO_DB_PASSWORD: ${{ secrets.PROD_MONGO_DB_PASSWORD}}
          PROD_MONGO_DB_NAME: ${{ secrets.PROD_MONGO_DB_NAME }}

          PROD_REDIS_HOST: ${{ secrets.PROD_REDIS_HOST }}
          PROD_REDIS_PORT: ${{ secrets.PROD_REDIS_PORT }}
          PROD_REDIS_PASSWORD: ${{ secrets.PROD_REDIS_PASSWORD }}

          PROD_JWT_SECRET: ${{ secrets.PROD_JWT_SECRET }}

          GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

      # 4. 서버에 배포
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
#          password: ${{ secrets.SERVER_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          timeout: 120s # 연결 타임아웃을 60초로 설정
          script: |
            cd /home/user
            ./stop.sh || true
            cp build/libs/cornchat.jar ./cornchat.jar
            nohup java -jar cornchat.jar &
          debug: true # 디버그 활성화